{"version":3,"file":"static/js/571.73a850c5.chunk.js","mappings":"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","sources":["webpack://my-app/./src/pages/Auth/auth.module.scss?e026","pages/Auth/Login.tsx","hooks/useAuth.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"authContainer\":\"auth_authContainer__v9O3Z\",\"authWrap\":\"auth_authWrap__5-S-9\",\"authForm\":\"auth_authForm__Po0S-\",\"formGroup\":\"auth_formGroup__Q77ja\",\"formInput\":\"auth_formInput__SMffn\",\"errorMessage\":\"auth_errorMessage__pymrH\",\"submitButton\":\"auth_submitButton__8iOR6\",\"authLink\":\"auth_authLink__RoS-z\"};","import { useState, FormEvent, ChangeEvent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useAuth } from '../../hooks/useAuth';\nimport css from './auth.module.scss';\n\nexport default function Login() {\n  const { handleLogin } = useAuth();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [hasSubmitted, setHasSubmitted] = useState(false);\n\n  const handleEmailChange = (e: ChangeEvent<HTMLInputElement>) => setEmail(e.target.value);\n  const handlePasswordChange = (e: ChangeEvent<HTMLInputElement>) => setPassword(e.target.value);\n\n  const handleSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n    setHasSubmitted(true);\n    setErrorMessage('');\n\n    const result = await handleLogin({ email, password });\n    \n    if (!result.success) {\n      setErrorMessage(result.error);\n    }\n  };\n\n  return (\n    <div className={css.authWrap}>\n      <div className={css.authContainer}>\n        <h1>Login</h1>\n        <form onSubmit={handleSubmit} className={css.authForm}>\n          <div className={css.formGroup}>\n            <label htmlFor=\"email\">Email:</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              value={email}\n              onChange={handleEmailChange}\n              required\n              className={css.formInput}\n            />\n          </div>\n          <div className={css.formGroup}>\n            <label htmlFor=\"password\">Password:</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={handlePasswordChange}\n              required\n              className={css.formInput}\n            />\n          </div>\n          {hasSubmitted && errorMessage && <div className={css.errorMessage}>{errorMessage}</div>}\n          <button type=\"submit\" className={css.submitButton}>\n            Login\n          </button>\n        </form>\n        <p className={css.authLink}>\n          Don't have an account? <Link to=\"/auth/register\">Register</Link>\n        </p>\n      </div>\n    </div>\n  );\n}\n","import { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { authService, LoginData, RegisterData } from '../api/services';\nimport { login } from '../store/slices/authSlice';\n\nexport const useAuth = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleLogin = useCallback(\n    async (loginData: LoginData) => {\n      try {\n        const authResponse = await authService.login(loginData);\n        const userResponse = await authService.getUserByEmailWithToken(loginData.email, authResponse.token);\n        const user = userResponse[0];\n\n        dispatch(\n          login({\n            token: authResponse.token,\n            refreshToken: authResponse.refreshToken,\n            user: {\n              id: user.id,\n              email: user.email,\n              username: user.username,\n            },\n          })\n        );\n\n        navigate('/');\n        return { success: true };\n      } catch (error: any) {\n        const message = error.response?.data?.message || 'User with this email or password not found';\n        return { success: false, error: message };\n      }\n    },\n    [dispatch, navigate]\n  );\n\n  const handleRegister = useCallback(\n    async (registerData: RegisterData) => {\n      try {\n        const authResponse = await authService.register(registerData);\n        const userResponse = await authService.getUserByEmailWithToken(registerData.email, authResponse.token);\n        const user = userResponse[0];\n\n        dispatch(\n          login({\n            token: authResponse.token,\n            refreshToken: authResponse.refreshToken,\n            user: {\n              id: user.id,\n              email: user.email,\n              username: user.username,\n            },\n          })\n        );\n\n        navigate('/');\n        return { success: true };\n      } catch (error: any) {\n        const message = error.response?.data?.message || 'Registration error';\n        return { success: false, error: message };\n      }\n    },\n    [dispatch, navigate]\n  );\n\n  return {\n    handleLogin,\n    handleRegister,\n  };\n}; "],"names":["Login","handleLogin","useAuth","email","setEmail","useState","password","setPassword","errorMessage","setErrorMessage","hasSubmitted","setHasSubmitted","_jsx","className","css","authWrap","children","_jsxs","authContainer","onSubmit","async","e","preventDefault","result","success","error","authForm","formGroup","htmlFor","type","id","value","onChange","target","required","formInput","submitButton","authLink","Link","to","dispatch","useDispatch","navigate","useNavigate","useCallback","authResponse","authService","login","loginData","user","getUserByEmailWithToken","token","refreshToken","username","_error$response","_error$response$data","response","data","message","handleRegister","register","registerData","_error$response2","_error$response2$data"],"sourceRoot":""}