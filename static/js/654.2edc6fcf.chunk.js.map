{"version":3,"file":"static/js/654.2edc6fcf.chunk.js","mappings":"0IAae,SAASA,EAAkBC,GAQb,IARc,MACzCC,EAAK,SACLC,EAAQ,kBACRC,EAAiB,gBACjBC,EAAe,wBACfC,GAA0B,EAAK,oBAC/BC,EAAmB,kBACnBC,GACwBP,EACxB,OACEQ,EAAAA,EAAAA,MAAA,OAAAN,SAAA,EACEO,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,EAAIV,MAAMC,SAAED,KAC3BQ,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,EAAIC,WAAWV,SAAEA,KACjCM,EAAAA,EAAAA,MAAA,OAAKE,UAAWC,EAAAA,EAAIE,QAAQX,SAAA,EAC1BO,EAAAA,EAAAA,KAAA,UACEC,UAAS,GAAAI,OAAKH,EAAAA,EAAII,UAAS,KAAAD,OAAIH,EAAAA,EAAIK,QACnCC,QAASb,EACTc,SAAUb,EAAwBH,SAEjCC,KAEHM,EAAAA,EAAAA,KAAA,UAAQC,UAAS,GAAAI,OAAKH,EAAAA,EAAIQ,aAAY,KAAAL,OAAIH,EAAAA,EAAIK,QAAUC,QAASV,EAAkBL,SAChFI,SAKX,C,qFC1Be,SAASc,EAA8BpB,GAQb,IARc,SACrDqB,EAAQ,WACRC,EAAU,gBACVC,EAAe,mBACfC,EAAkB,gBAClBC,EAAe,sBACfC,EAAqB,QACrBC,GACoC3B,EACpC,OACEQ,EAAAA,EAAAA,MAACT,EAAAA,EAAkB,CACjBE,MAAM,oBACNE,kBAAkB,QAClBC,gBAAiBsB,EACjBrB,wBAAyBuB,QAAQP,IAAaC,GAC9ChB,oBAAoB,SACpBC,kBAAmBoB,EAAQzB,SAAA,EAE3BO,EAAAA,EAAAA,KAACoB,EAAa,CAACR,SAAUA,EAAUC,WAAYA,EAAYQ,YAAaL,KACxEhB,EAAAA,EAAAA,KAACsB,EAAW,CAACR,gBAAiBA,EAAiBS,cAAeR,MAGpE,CAQA,MAAMK,EAAgBI,IAAA,IAAC,SAAEZ,EAAQ,WAAEC,EAAU,YAAEQ,GAAiCG,EAAA,OAC9EzB,EAAAA,EAAAA,MAAA0B,EAAAA,SAAA,CAAAhC,SAAA,EACEO,EAAAA,EAAAA,KAAA,SACE0B,KAAK,OACLC,MAAOf,EACPgB,SAAWC,GAAMR,EAAYQ,EAAEC,OAAOH,OACtCI,YAAY,mFACZ9B,WAAYY,GAAcD,EAAW,QAAU,MAE/CC,GAAcD,IAAYZ,EAAAA,EAAAA,KAAA,OAAKC,UAAW+B,EAAAA,EAAUC,MAAMxC,SAAC,kOAC5D,EAQC6B,EAAcY,IAAA,IAAC,gBAAEpB,EAAe,cAAES,GAAiCW,EAAA,OACvElC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,EAAIiC,YAAY1C,UAC9BM,EAAAA,EAAAA,MAAA,SAAOE,UAAWC,EAAAA,EAAIkC,iBAAiB3C,SAAA,CAAC,oFAEtCO,EAAAA,EAAAA,KAAA,SACEC,UAAWC,EAAAA,EAAImC,iBACfX,KAAK,QACLC,MAAOb,EACPc,SAAWC,GAAMN,EAAcM,EAAEC,OAAOH,aAGxC,C","sources":["components/Modal/ModalActionContent.tsx","components/BackgroundSettings/BackgroundSettingsModalContent.tsx"],"sourcesContent":["import React from 'react';\nimport css from './modal.module.scss';\n\ninterface ModalActionContentProps {\n  title: string;\n  children: React.ReactNode;\n  primaryButtonText: string;\n  onPrimaryAction: () => void;\n  isPrimaryButtonDisabled?: boolean;\n  secondaryButtonText: string;\n  onSecondaryAction: () => void;\n}\n\nexport default function ModalActionContent({\n  title,\n  children,\n  primaryButtonText,\n  onPrimaryAction,\n  isPrimaryButtonDisabled = false,\n  secondaryButtonText,\n  onSecondaryAction,\n}: ModalActionContentProps) {\n  return (\n    <div>\n      <h2 className={css.title}>{title}</h2>\n      <div className={css.inputGroup}>{children}</div>\n      <div className={css.actions}>\n        <button\n          className={`${css.buttonAdd} ${css.button}`}\n          onClick={onPrimaryAction}\n          disabled={isPrimaryButtonDisabled}\n        >\n          {primaryButtonText}\n        </button>\n        <button className={`${css.buttonCancel} ${css.button}`} onClick={onSecondaryAction}>\n          {secondaryButtonText}\n        </button>\n      </div>\n    </div>\n  );\n}\n","import css from './BackgroundSettings.module.scss';\nimport errorCsss from '../../pages/Board/components/common/BoardNameInput.module.scss';\nimport ModalActionContent from '../../components/Modal/ModalActionContent';\n\ninterface BackgroundSettingsModalContentProps {\n  imageUrl: string;\n  isUrlValid: boolean;\n  backgroundColor: string;\n  setBackgroundColor: (color: string) => void;\n  handleUrlChange: (url: string) => void;\n  handleApplyBackground: () => void;\n  onClose: () => void;\n}\n\nexport default function BackgroundSettingsModalContent({\n  imageUrl,\n  isUrlValid,\n  backgroundColor,\n  setBackgroundColor,\n  handleUrlChange,\n  handleApplyBackground,\n  onClose,\n}: BackgroundSettingsModalContentProps) {\n  return (\n    <ModalActionContent\n      title=\"Change background\"\n      primaryButtonText=\"Apply\"\n      onPrimaryAction={handleApplyBackground}\n      isPrimaryButtonDisabled={Boolean(imageUrl && !isUrlValid)}\n      secondaryButtonText=\"Cancel\"\n      onSecondaryAction={onClose}\n    >\n      <ImageUrlInput imageUrl={imageUrl} isUrlValid={isUrlValid} onUrlChange={handleUrlChange} />\n      <ColorPicker backgroundColor={backgroundColor} onColorChange={setBackgroundColor} />\n    </ModalActionContent>\n  );\n}\n\ninterface ImageUrlInputProps {\n  imageUrl: string;\n  isUrlValid: boolean;\n  onUrlChange: (url: string) => void;\n}\n\nconst ImageUrlInput = ({ imageUrl, isUrlValid, onUrlChange }: ImageUrlInputProps) => (\n  <>\n    <input\n      type=\"text\"\n      value={imageUrl}\n      onChange={(e) => onUrlChange(e.target.value)}\n      placeholder=\"URL зображення (jpg, png, gif)\"\n      className={!isUrlValid && imageUrl ? 'error' : ''}\n    />\n    {!isUrlValid && imageUrl && <div className={errorCsss.error}>Будь ласка, введіть коректний URL зображення</div>}\n  </>\n);\n\ninterface ColorPickerProps {\n  backgroundColor: string;\n  onColorChange: (color: string) => void;\n}\n\nconst ColorPicker = ({ backgroundColor, onColorChange }: ColorPickerProps) => (\n  <div className={css.colorPicker}>\n    <label className={css.colorPickerLabel}>\n      Виберіть колір:\n      <input\n        className={css.colorPickerInput}\n        type=\"color\"\n        value={backgroundColor}\n        onChange={(e) => onColorChange(e.target.value)}\n      />\n    </label>\n  </div>\n);\n"],"names":["ModalActionContent","_ref","title","children","primaryButtonText","onPrimaryAction","isPrimaryButtonDisabled","secondaryButtonText","onSecondaryAction","_jsxs","_jsx","className","css","inputGroup","actions","concat","buttonAdd","button","onClick","disabled","buttonCancel","BackgroundSettingsModalContent","imageUrl","isUrlValid","backgroundColor","setBackgroundColor","handleUrlChange","handleApplyBackground","onClose","Boolean","ImageUrlInput","onUrlChange","ColorPicker","onColorChange","_ref2","_Fragment","type","value","onChange","e","target","placeholder","errorCsss","error","_ref3","colorPicker","colorPickerLabel","colorPickerInput"],"sourceRoot":""}