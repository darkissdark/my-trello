{"version":3,"file":"static/js/213.35a2bc49.chunk.js","mappings":"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","sources":["webpack://my-app/./src/pages/Auth/auth.module.scss?e026","pages/Auth/Register.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"auth-container\":\"auth_auth-container__7tusj\",\"auth-wrap\":\"auth_auth-wrap__W9iC3\",\"auth-title\":\"auth_auth-title__OZxWV\",\"auth-label\":\"auth_auth-label__Bsngh\",\"auth-input\":\"auth_auth-input__eKEmR\",\"auth-error\":\"auth_auth-error__1hech\",\"auth-password-strength\":\"auth_auth-password-strength__cIn05\",\"auth-password-bar\":\"auth_auth-password-bar__jYQ4N\",\"filled\":\"auth_filled__C2ld9\",\"weak\":\"auth_weak__Halzm\",\"fair\":\"auth_fair__MReUZ\",\"medium\":\"auth_medium__0Q61c\",\"good\":\"auth_good__wy4QT\",\"strong\":\"auth_strong__kDTw4\",\"auth-button\":\"auth_auth-button__wlfKN\",\"auth-link-row\":\"auth_auth-link-row__QFm8x\",\"auth-link\":\"auth_auth-link__JlDhg\"};","import { useState, useCallback, FormEvent, ChangeEvent } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport api from '../../api/request';\nimport css from './auth.module.scss';\n\nconst getPasswordStrength = (password: string): number => {\n  let score = 0;\n  if (password.length >= 8) score++;\n  if (/[A-Z]/.test(password)) score++;\n  if (/[0-9]/.test(password)) score++;\n  if (/[^A-Za-z0-9]/.test(password)) score++;\n  if (password.length >= 12) score++;\n  return score;\n};\n\nconst PASSWORD_STRENGTH_CLASSES = ['', css.weak, css.fair, css.medium, css.good, css.strong];\n\nexport default function Register() {\n  const navigate = useNavigate();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [hasTouchedConfirm, setHasTouchedConfirm] = useState(false);\n\n  const passwordStrength = getPasswordStrength(password);\n  const passwordStrengthClass = PASSWORD_STRENGTH_CLASSES[passwordStrength] || '';\n\n  const isPasswordMismatch = hasTouchedConfirm && password !== confirmPassword;\n\n  const handleEmailChange = (e: ChangeEvent<HTMLInputElement>) => setEmail(e.target.value);\n  const handlePasswordChange = (e: ChangeEvent<HTMLInputElement>) => setPassword(e.target.value);\n  const handleConfirmChange = (e: ChangeEvent<HTMLInputElement>) => setConfirmPassword(e.target.value);\n\n  const handleSubmit = useCallback(\n    async (e: FormEvent) => {\n      e.preventDefault();\n      setHasTouchedConfirm(true);\n      setErrorMessage('');\n\n      if (password !== confirmPassword) {\n        setErrorMessage('Паролі не співпадають!');\n        return;\n      }\n\n      try {\n        await api.post('/user', {\n          email,\n          password,\n          username: email.split('@')[0],\n        });\n        navigate('/auth/login');\n      } catch (err: any) {\n        const message = err.response?.data?.message || 'Помилка реєстрації';\n        setErrorMessage(message);\n      }\n    },\n    [email, password, confirmPassword, navigate]\n  );\n\n  return (\n    <div className={css['auth-wrap']}>\n      <div className={css['auth-container']}>\n        <h2 className={css['auth-title']}>Реєстрація</h2>\n\n        <form onSubmit={handleSubmit} noValidate>\n          <label htmlFor=\"email\" className={css['auth-label']}>\n            Email\n          </label>\n          <input\n            id=\"email\"\n            type=\"email\"\n            className={css['auth-input']}\n            placeholder=\"Email\"\n            value={email}\n            onChange={handleEmailChange}\n            required\n          />\n\n          <label htmlFor=\"password\" className={css['auth-label']}>\n            Пароль\n          </label>\n          <input\n            id=\"password\"\n            type=\"password\"\n            className={css['auth-input']}\n            placeholder=\"Пароль\"\n            value={password}\n            onChange={handlePasswordChange}\n            required\n          />\n\n          <div className={`${css['auth-password-strength']} ${passwordStrengthClass}`}>\n            {Array.from({ length: 5 }).map((_, i) => (\n              <div key={i} className={`${css['auth-password-bar']} ${passwordStrength > i ? css.filled : ''}`} />\n            ))}\n          </div>\n\n          <label htmlFor=\"confirm\" className={css['auth-label']}>\n            Повторіть пароль\n          </label>\n          <input\n            id=\"confirm\"\n            type=\"password\"\n            className={`${css['auth-input']} ${isPasswordMismatch ? css.error : ''}`}\n            placeholder=\"Підтвердіть пароль\"\n            value={confirmPassword}\n            onChange={handleConfirmChange}\n            onBlur={() => setHasTouchedConfirm(true)}\n            required\n          />\n\n          {isPasswordMismatch && <div className={css['auth-error']}>Паролі не співпадають!</div>}\n          {errorMessage && <div className={css['auth-error']}>{errorMessage}</div>}\n\n          <button type=\"submit\" className={`${css['auth-button']} button blue`}>\n            Зареєструватися\n          </button>\n        </form>\n\n        <div className={css['auth-link-row']}>\n          Вже є акаунт?{' '}\n          <Link to=\"/auth/login\" className={css['auth-link']}>\n            Увійти\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["getPasswordStrength","password","score","length","test","PASSWORD_STRENGTH_CLASSES","css","weak","fair","medium","good","strong","Register","navigate","useNavigate","email","setEmail","useState","setPassword","confirmPassword","setConfirmPassword","errorMessage","setErrorMessage","hasTouchedConfirm","setHasTouchedConfirm","passwordStrength","passwordStrengthClass","isPasswordMismatch","handleSubmit","useCallback","async","e","preventDefault","api","post","username","split","err","_err$response","_err$response$data","message","response","data","_jsx","className","children","_jsxs","onSubmit","noValidate","htmlFor","id","type","placeholder","value","onChange","target","required","concat","Array","from","map","_","i","filled","error","onBlur","Link","to"],"sourceRoot":""}